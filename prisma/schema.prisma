// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  userId        String     @id @default(uuid())
  email         String     @unique
  number        String     @unique
  profileUrl    String?
  otp           String?
  otpExpiration DateTime?
  createdAt     DateTime   @default(now())
  name          String     @unique
  isAdmin       Boolean    @default(false)
  Meetings      Meetings[]
  Visitor       Visitor[]
}

model Security {
  securityId String    @id @default(uuid())
  name       String
  number     String    @unique
  password   String
  createdAt  DateTime  @default(now())
  Visitor    Visitor[]
}

model Visitor {
  visitorId  String    @id @default(uuid())
  name       String
  age        Int
  address    String
  purpose    String
  number     Int
  photo      String?
  user       User?     @relation(fields: [userId], references: [userId])
  createdAt  DateTime  @default(now())
  userId     String?
  security   Security? @relation(fields: [securityId], references: [securityId])
  securityId String?
  status     Boolean //in or out
}

model Meetings {
  meetingId String   @id @default(uuid())
  title     String
  agenda    String?
  timing    DateTime
  location  String
  completed Boolean  @default(false)
  createdAt DateTime @default(now())
  admin     User     @relation(fields: [userId], references: [userId])
  userId    String
}
